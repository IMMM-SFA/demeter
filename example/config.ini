[STRUCTURE]
root_dir =                      /users/d3y010/repos/github/demeter/example
in_dir =                        inputs
out_dir =                       outputs

[INPUTS]
allocation_dir =                allocation
observed_dir =                  observed
constraints_dir =               constraints
projected_dir =                 projected
ref_dir =                       reference

[[ALLOCATION]]
spatial_allocation =            spatial_allocation.csv
gcam_allocation =               gcam_allocation.csv
kernel_allocation =             kernel_density_weighting.csv
transition_order =              transition_priority.csv
treatment_order =               treatment_order.csv
constraints =                   constraint_weighting.csv

[[OBSERVED]]
observed_lu_data =              modis_2005_lc_monfreda_0p25deg_reg32aez.csv

[[PROJECTED]]
projected_lu_data =             gcam_ref_scenario_reg32aez.csv

[[REFERENCE]]
gcam_regnamefile =              gcam_regions_32.csv
gcam_bsnnamefile =              gcam_basin_lookup.csv
region_coords =                 regioncoord.csv
country_coords =                countrycoord.csv

[OUTPUTS]
diag_dir =                      diagnostics
log_dir =                       log_files
kernel_map_dir =                kernel_density
transition_tabular =            transition_tabular
transition_maps =               transition_maps
luc_intense_p1_dir =            luc_intensification_pass1
luc_intense_p2_dir =            luc_intensification_pass2
luc_expand_dir =                luc_expansion
luc_timestep =                  luc_timestep
lc_per_step_csv =               spatial_landcover_tabular
lc_per_step_nc =                spatial_landcover_netcdf
lc_per_step_shp =               spatial_landcover_shapefile

[[DIAGNOSTICS]]
harm_coeff =                    harmonization_coeff.npy
intense_pass1_diag =            intensification_pass_one_diag.csv
intense_pass2_diag =            intensification_pass_two_diag.csv
expansion_diag =                expansion_diag.csv

[PARAMS]
# projection model name
model =                         GCAM

# projection model database path; comment out to use default file
db_path =                       /users/d3y010/repos/github/tethys/example/Input/GCAM/outRefMrk

# projection model database queries
db_queries =                    /users/d3y010/repos/github/demeter/example/inputs/reference/query_regaez.xml

# projection model metric, currently AEZ or BASIN
metric =                        AEZ

# GCAM crop type filter; one of IRR, RFD, or BOTH
crop_water_src =                BOTH

# scenario name
scenario =                      example

# run description
run_desc =                      demeter_example

# aggregate level; 1 if there is no region information in the file, 2 if by both region and AEZ (Default)
agg_level =                     2

# spatial base layer id field name
observed_id_field =             fid

# first year to process
start_year =                    2005

# last year to process
end_year =                      2015

# enter 1 to use non-kernel density constraints, 0 to ignore non-kernel density constraints
use_constraints =               1

# the spatial resolution of the base lulc layer in decimal degrees
spatial_resolution =            0.25

# error tolerance in km2 for PFT area change not completed
errortol =                      0.001

# time step in years
timestep =                      1

# factor to multiply the projected land allocation by
proj_factor =                   1000

# output diagnostic reports
diagnostic =                    0

# from 0 to 1; ideal fraction of LUC that will occur during intensification, the remainder will be expansion
intensification_ratio =         0.8

# activates the stochastic selection of grid cells for expansion of any PFT
stochastic_expansion =          0

# threshold above which grid cells are selected to receive a given land type expansion; between 0 and 1, where 0 is all
#     land cells can receive expansion and set to 1 only the grid cell with the maximum likelihood will expand.  For
#     a 0.75 setting, only grid cells with a likelihood >= 0.75 x max_likelihood are selected.
selection_threshold =           0.75

# radius in grid cells to use when computing the kernel density; larger is smoother but will increase run-time
kernel_distance =               10

# create kernel density maps; 1 is True
map_kernels =                   0

# create land change maps per time step per land class
map_luc_pft =                   0

# create land change maps for each intensification and expansion step
map_luc_steps =                 0

# creates maps of land transitions for each time step
map_transitions =               0

# years to save data for, default is 'all'; otherwise a semicolon delimited string e.g, 2005;2050
target_years_output =           all

# save tabular spatial landcover as CSV; define tabular_units below (default sqkm)
save_tabular =                  1

# units to output tabular data in (sqkm or fraction)
tabular_units =                 sqkm

# exports CSV files of land transitions for each time step in km2
save_transitions =              0

# create land cover per point shapefile output for each time step; output units will be same as tabular data
save_shapefile =                0

# create a NetCDF file for each year of the fraction of land cover of each land class
save_netcdf_yr =                0

# create a NetCDF file for each land class of the fraction of land cover it takes up over all years
save_netcdf_lc =                0

# create an ASCII raster representing the land class with the maximum value per grid cell per year
save_ascii_max =                0


[ENSEMBLE]
# if running ensemble the number of permutations to configure
permutations =                  2

# the CSV file full path with file name of the limits to create parameter ensembles for
limits_file =                   /users/d3y010/repos/github/demeter/example/inputs/reference/limits.csv

# the number of CPUs to spread the processing over (-1 is all, -2 is all but one, 4 is four).
n_jobs =                        -1
